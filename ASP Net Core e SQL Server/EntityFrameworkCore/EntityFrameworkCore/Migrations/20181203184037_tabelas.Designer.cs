// <auto-generated />
using EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EntityFrameworkCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181203184037_tabelas")]
    partial class tabelas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFrameworkCore.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("EntityFrameworkCore.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EstudanteId");

                    b.Property<string>("Rua");

                    b.HasKey("Id");

                    b.HasIndex("EstudanteId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("EntityFrameworkCore.Estudante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EstaExcluido");

                    b.Property<int>("Idade");

                    b.Property<string>("Nome");

                    b.Property<int>("TurmaId");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("Estudantes");
                });

            modelBuilder.Entity("EntityFrameworkCore.EstudanteCurso", b =>
                {
                    b.Property<int>("CursoId");

                    b.Property<int>("EstudanteId");

                    b.Property<bool>("Ativo");

                    b.HasKey("CursoId", "EstudanteId");

                    b.HasIndex("EstudanteId");

                    b.ToTable("EstudantesCurso");
                });

            modelBuilder.Entity("EntityFrameworkCore.EstudanteDetalhe", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Area");

                    b.Property<int>("CategoriaPagamento");

                    b.Property<bool>("Debito");

                    b.HasKey("Id");

                    b.ToTable("Estudantes");
                });

            modelBuilder.Entity("EntityFrameworkCore.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("EntityFrameworkCore.Endereco", b =>
                {
                    b.HasOne("EntityFrameworkCore.Estudante")
                        .WithOne("Endereco")
                        .HasForeignKey("EntityFrameworkCore.Endereco", "EstudanteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EntityFrameworkCore.Estudante", b =>
                {
                    b.HasOne("EntityFrameworkCore.Turma")
                        .WithMany("Estudantes")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EntityFrameworkCore.EstudanteCurso", b =>
                {
                    b.HasOne("EntityFrameworkCore.Curso", "Curso")
                        .WithMany("EstudantesCursos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EntityFrameworkCore.Estudante", "Estudante")
                        .WithMany("EstudantesCursos")
                        .HasForeignKey("EstudanteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EntityFrameworkCore.EstudanteDetalhe", b =>
                {
                    b.HasOne("EntityFrameworkCore.Estudante", "Estudante")
                        .WithOne("EstudanteDetalhe")
                        .HasForeignKey("EntityFrameworkCore.EstudanteDetalhe", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
